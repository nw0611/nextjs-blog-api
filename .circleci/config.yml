# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

orbs:
  node: circleci/node@5.0.0
  aws-cli: circleci/aws-cli@2.0.6

commands:
  build_storybook:
    steps:
      - run:
          name: check node version
          command: node -v
      - run:
          name: Installing node modules
          command: npm install
      - run:
          name: build storybook
          command: yarn build-storybook
      - store_artifacts:
          path: ./storybook-static
  build_storybook_dev:
    steps:
      - run:
          name: check node version
          command: node -v
      - run:
          name: Installing node modules
          command: npm install
      - run:
          name: build storybook
          command: yarn build-storybook && mkdir ./public/storybook
      - run:
          name: copy build
          command: cp -r ./storybook-static/ ./public/storybook/
      - store_artifacts:
          path: ./public/storybook
  screenshot:
    steps:
      # - run:
      #     name: update apt-get upgrade
      #     command: sudo apt-get upgrade
      - run:
          name: Install
          command: wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
      - run:
          name: Install
          command: yum -y install google-chrome*.rp
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get update && sudo apt-get install \
            libnss3 gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 lsb-release xdg-utils wget
      - run:
          name: install ja font
          command: |
            sudo apt -qy --no-install-recommends install -y fonts-takao-gothic fonts-takao-mincho &&
            sudo dpkg-reconfigure --frontend noninteractive locales &&
            sudo fc-cache -fv
      - run:
          name: make credential file
          command: |
            mkdir ~/.aws && touch ~/.aws/credentials &&
            echo [default] >> ~/.aws/credentials &&
            echo aws_access_key_id=$aws_access_key_id >> ~/.aws/credentials &&
            echo aws_secret_access_key=$aws_secret_access_key >> ~/.aws/credentials
      - run:
          name: Install
          command: ls -la /home/
      - run:
          name: screenshot
          command: yarn storycap
  regression:
    steps:
      - run:
          name: check node
          command: node -v
      - run:
          name: regression
          command: |
            export EXPECTED_HASH=$(git rev-parse --short origin/develop) &&
            export EXPECTED_COMMIT_DATE=$(git log origin/develop --date=iso --date=format:'%Y_%m_%d' --pretty=format:'%ad' -1) &&
            export ACTUAL_BRANCH=$(git rev-parse --short --abbrev-ref @) &&
            export ACTUAL_BRANCH_HASH=$(git rev-parse --short HEAD) &&
            export ACTUAL_COMMIT_DATE=$(git log --date=iso --date=format:'%Y_%m_%d' --pretty=format:'%ad' -1) &&
            yarn reg-suit run
      - store_artifacts:
          path: ./__screenshots__
jobs:
  # aws-cli-cred-setup:
  #   executor: aws-cli/default
  #   steps:
  #     - aws-cli/setup:
  #         aws-access-key-id: aws_access_key_id
  #         aws-secret-access-key: aws_secret_access_key
  #         aws-region: region
  build_set:
    executor:
      name: node/default
      tag: '16'
    docker:
      - image: circleci/node:14.16.1-browsers
    environment:
      TZ: "Asia/Tokyo"
    working_directory: ~/repo
    steps:
      - checkout
      - build_storybook
      - screenshot
      - regression
  build_set_dev:
    docker:
      - image: circleci/node:14.16.1-browsers
    environment:
      TZ: "Asia/Tokyo"
    working_directory: ~/repo
    steps:
      - checkout
      - build_storybook_dev
      - screenshot
      - regression

workflows:
  version: 2
  default:
    jobs:
      # - aws-cli-cred-setup:
      #     context: aws
      #     filters:
      #       branches:
      #         ignore: /(develop|main)/
      - build_set:
          filters:
            branches:
              ignore: /(develop|main)/
  develop:
    jobs:
      - build_set_dev:
          filters:
            branches:
              only: /develop/
# workflows:
#   sample:
#     jobs:
#       - node/test:
#           version: '15.1'
#           # This is the node version to use for the `cimg/node` tag
#           # Relevant tags can be found on the CircleCI Developer Hub
#           # https://circleci.com/developer/images/image/cimg/node
